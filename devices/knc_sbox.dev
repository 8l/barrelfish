/*
 * Copyright (c) 2014 ETH Zurich. All rights reserved.
 *
 * This file is distributed under the terms in the attached LICENSE file.
 * If you do not find this file, copies can be found by writing to:
 * ETH Zurich D-INFK, Haldeneggsteig 4, CH-8092 Zurich. Attn: Systems Group.
 */

/*
 * knc_sbox.dev
 *
 * description: intel e1000 family gigabit ethernet nics
 */

device knc_sbox lsbfirst ( addr base ) "intel xeon phi (knights corner) sbox" {

register oc_i2c_icr                     rw addr(base, 0x1000) "foo" { };
register thermal_status                 rw addr(base, 0x1018) "foo" { };
register thermal_interrupt_enable               rw addr(base, 0x101c) "foo" { };
register status_fan1                    rw addr(base, 0x1024) "foo" { };
register status_fan2                    rw addr(base, 0x1028) "foo" { };
register speed_override_fan                 rw addr(base, 0x102c) "foo" { };
register board_temp1                    rw addr(base, 0x1030) "foo" { };
register board_temp2                    rw addr(base, 0x1034) "foo" { };
register board_voltage_sense                rw addr(base, 0x1038) "foo" { };
register current_die_temp0                  rw addr(base, 0x103c) "foo" { };
register current_die_temp1                  rw addr(base, 0x1040) "foo" { };
register current_die_temp2                  rw addr(base, 0x1044) "foo" { };
register max_die_temp0                  rw addr(base, 0x1048) "foo" { };
register max_die_temp1                  rw addr(base, 0x104c) "foo" { };
register max_die_temp2                  rw addr(base, 0x1050) "foo" { };
register elapsed_time_low                                   rw addr(base, 0x1074) "foo" { };
register elapsed_time_high                                  rw addr(base, 0x1078) "foo" { };
register fail_safe_offset                   rw addr(base, 0x2004) "foo" { };
register current_clk_ratio                  rw addr(base, 0x3004) "foo" { };
register smpt00                     rw addr(base, 0x3100) "foo" { };
register smpt02                     rw addr(base, 0x3108) "foo" { };
register rgcr                       rw addr(base, 0x4010) "foo" { };
register dstat                      rw addr(base, 0x4014) "foo" { };
register pcie_pci_revision_id_and_c_0x8         rw addr(base, 0x5808) "foo" { };
register pcie_bar_enable                    rw addr(base, 0x5cd4) "foo" { };
register sicr0                      rw addr(base, 0x9004) "foo" { };
register sice0                      rw addr(base, 0x900c) "foo" { };
register sicc0                      rw addr(base, 0x9010) "foo" { };
register sicr1                      rw addr(base, 0x901c) "foo" { };
register sicc1                      rw addr(base, 0x9028) "foo" { };
register pmu_period_sel             rw addr(base, 0x1070) "foo" { };
register thermal_status_interrupt   rw addr(base, 0x107c) "foo" { };
register thermal_status_2           rw addr(base, 0x1080) "foo" { };
register thermal_test_2             rw addr(base, 0x1084) "foo" { };
register corefreq                   rw addr(base, 0x4100) "foo" { };
register corevolt                   rw addr(base, 0x4104) "foo" { };
register memoryfreq                 rw addr(base, 0x4108) "foo" { };
register memvolt                    rw addr(base, 0x410c) "foo" { };
register sdbic0                     rw addr(base, 0xcc90) "foo" { };
register sdbic1                     rw addr(base, 0xcc94) "foo" { };
register sdbic2                     rw addr(base, 0xcc98) "foo" { };
register sdbic3                     rw addr(base, 0xcc9c) "foo" { };
register mxar0                      rw addr(base, 0x9040) "foo" { };
register mxar0_k1om                     rw addr(base, 0x9044) "foo" { };
register mxar1                      rw addr(base, 0x9044) "foo" { };
register mxar2                      rw addr(base, 0x9048) "foo" { };
register mxar3                      rw addr(base, 0x904c) "foo" { };
register mxar4                      rw addr(base, 0x9050) "foo" { };
register mxar5                      rw addr(base, 0x9054) "foo" { };
register mxar6                      rw addr(base, 0x9058) "foo" { };
register mxar7                      rw addr(base, 0x905c) "foo" { };
register mxar8                      rw addr(base, 0x9060) "foo" { };
register mxar9                      rw addr(base, 0x9064) "foo" { };
register mxar10                     rw addr(base, 0x9068) "foo" { };
register mxar11                     rw addr(base, 0x906c) "foo" { };
register mxar12                     rw addr(base, 0x9070) "foo" { };
register mxar13                     rw addr(base, 0x9074) "foo" { };
register mxar14                     rw addr(base, 0x9078) "foo" { };
register mxar15                     rw addr(base, 0x907c) "foo" { };
register msixpbacr                      rw addr(base, 0x9080) "foo" { };
register msixpbacr_k1om                 rw addr(base, 0x9084) "foo" { };
register dcar_0                     rw addr(base, 0xa000) "foo" { };
register dhpr_0                     rw addr(base, 0xa004) "foo" { };
register dtpr_0                     rw addr(base, 0xa008) "foo" { };
register daux_lo_0                      rw addr(base, 0xa00c) "foo" { };
register daux_hi_0                      rw addr(base, 0xa010) "foo" { };
register drar_lo_0                      rw addr(base, 0xa014) "foo" { };
register drar_hi_0                      rw addr(base, 0xa018) "foo" { };
register ditr_0                     rw addr(base, 0xa01c) "foo" { };
register dstat_0                        rw addr(base, 0xa020) "foo" { };
register dstatwb_lo_0                   rw addr(base, 0xa024) "foo" { };
register dstatwb_hi_0                   rw addr(base, 0xa028) "foo" { };
register dcherr_0                       rw addr(base, 0xa02c) "foo" { };
register dcherrmsk_0                    rw addr(base, 0xa030) "foo" { };
register dcar_1                     rw addr(base, 0xa040) "foo" { };
register dhpr_1                     rw addr(base, 0xa044) "foo" { };
register dtpr_1                     rw addr(base, 0xa048) "foo" { };
register daux_lo_1                      rw addr(base, 0xa04c) "foo" { };
register daux_hi_1                      rw addr(base, 0xa050) "foo" { };
register drar_lo_1                      rw addr(base, 0xa054) "foo" { };
register drar_hi_1                      rw addr(base, 0xa058) "foo" { };
register ditr_1                     rw addr(base, 0xa05c) "foo" { };
register dstat_1                        rw addr(base, 0xa060) "foo" { };
register dstatwb_lo_1                   rw addr(base, 0xa064) "foo" { };
register dstatwb_hi_1                   rw addr(base, 0xa068) "foo" { };
register dcherr_1                       rw addr(base, 0xa06c) "foo" { };
register dcherrmsk_1                    rw addr(base, 0xa070) "foo" { };
register dcar_2                     rw addr(base, 0xa080) "foo" { };
register dhpr_2                     rw addr(base, 0xa084) "foo" { };
register dtpr_2                     rw addr(base, 0xa088) "foo" { };
register daux_lo_2                      rw addr(base, 0xa08c) "foo" { };
register daux_hi_2                      rw addr(base, 0xa090) "foo" { };
register drar_lo_2                      rw addr(base, 0xa094) "foo" { };
register drar_hi_2                      rw addr(base, 0xa098) "foo" { };
register ditr_2                     rw addr(base, 0xa09c) "foo" { };
register dstat_2                        rw addr(base, 0xa0a0) "foo" { };
register dstatwb_lo_2                   rw addr(base, 0xa0a4) "foo" { };
register dstatwb_hi_2                   rw addr(base, 0xa0a8) "foo" { };
register dcherr_2                       rw addr(base, 0xa0ac) "foo" { };
register dcherrmsk_2                    rw addr(base, 0xa0b0) "foo" { };
register dcar_3                     rw addr(base, 0xa0c0) "foo" { };
register dhpr_3                     rw addr(base, 0xa0c4) "foo" { };
register dtpr_3                     rw addr(base, 0xa0c8) "foo" { };
register daux_lo_3                      rw addr(base, 0xa0cc) "foo" { };
register daux_hi_3                      rw addr(base, 0xa0d0) "foo" { };
register drar_lo_3                      rw addr(base, 0xa0d4) "foo" { };
register drar_hi_3                      rw addr(base, 0xa0d8) "foo" { };
register ditr_3                     rw addr(base, 0xa0dc) "foo" { };
register dstat_3                        rw addr(base, 0xa0e0) "foo" { };
register dstatwb_lo_3                   rw addr(base, 0xa0e4) "foo" { };
register dstatwb_hi_3                   rw addr(base, 0xa0e8) "foo" { };
register dcherr_3                       rw addr(base, 0xa0ec) "foo" { };
register dcherrmsk_3                    rw addr(base, 0xa0f0) "foo" { };
register dcar_4                     rw addr(base, 0xa100) "foo" { };
register dhpr_4                     rw addr(base, 0xa104) "foo" { };
register dtpr_4                     rw addr(base, 0xa108) "foo" { };
register daux_lo_4                      rw addr(base, 0xa10c) "foo" { };
register daux_hi_4                      rw addr(base, 0xa110) "foo" { };
register drar_lo_4                      rw addr(base, 0xa114) "foo" { };
register drar_hi_4                      rw addr(base, 0xa118) "foo" { };
register ditr_4                     rw addr(base, 0xa11c) "foo" { };
register dstat_4                        rw addr(base, 0xa120) "foo" { };
register dstatwb_lo_4                   rw addr(base, 0xa124) "foo" { };
register dstatwb_hi_4                   rw addr(base, 0xa128) "foo" { };
register dcherr_4                       rw addr(base, 0xa12c) "foo" { };
register dcherrmsk_4                    rw addr(base, 0xa130) "foo" { };
register dcar_5                     rw addr(base, 0xa140) "foo" { };
register dhpr_5                     rw addr(base, 0xa144) "foo" { };
register dtpr_5                     rw addr(base, 0xa148) "foo" { };
register daux_lo_5                      rw addr(base, 0xa14c) "foo" { };
register daux_hi_5                      rw addr(base, 0xa150) "foo" { };
register drar_lo_5                      rw addr(base, 0xa154) "foo" { };
register drar_hi_5                      rw addr(base, 0xa158) "foo" { };
register ditr_5                     rw addr(base, 0xa15c) "foo" { };
register dstat_5                        rw addr(base, 0xa160) "foo" { };
register dstatwb_lo_5                   rw addr(base, 0xa164) "foo" { };
register dstatwb_hi_5                   rw addr(base, 0xa168) "foo" { };
register dcherr_5                       rw addr(base, 0xa16c) "foo" { };
register dcherrmsk_5                    rw addr(base, 0xa170) "foo" { };
register dcar_6                     rw addr(base, 0xa180) "foo" { };
register dhpr_6                     rw addr(base, 0xa184) "foo" { };
register dtpr_6                     rw addr(base, 0xa188) "foo" { };
register daux_lo_6                      rw addr(base, 0xa18c) "foo" { };
register daux_hi_6                      rw addr(base, 0xa190) "foo" { };
register drar_lo_6                      rw addr(base, 0xa194) "foo" { };
register drar_hi_6                      rw addr(base, 0xa198) "foo" { };
register ditr_6                     rw addr(base, 0xa19c) "foo" { };
register dstat_6                        rw addr(base, 0xa1a0) "foo" { };
register dstatwb_lo_6                   rw addr(base, 0xa1a4) "foo" { };
register dstatwb_hi_6                   rw addr(base, 0xa1a8) "foo" { };
register dcherr_6                       rw addr(base, 0xa1ac) "foo" { };
register dcherrmsk_6                    rw addr(base, 0xa1b0) "foo" { };
register dcar_7                     rw addr(base, 0xa1c0) "foo" { };
register dhpr_7                     rw addr(base, 0xa1c4) "foo" { };
register dtpr_7                     rw addr(base, 0xa1c8) "foo" { };
register daux_lo_7                      rw addr(base, 0xa1cc) "foo" { };
register daux_hi_7                      rw addr(base, 0xa1d0) "foo" { };
register drar_lo_7                      rw addr(base, 0xa1d4) "foo" { };
register drar_hi_7                      rw addr(base, 0xa1d8) "foo" { };
register ditr_7                     rw addr(base, 0xa1dc) "foo" { };
register dstat_7                        rw addr(base, 0xa1e0) "foo" { };
register dstatwb_lo_7                   rw addr(base, 0xa1e4) "foo" { };
register dstatwb_hi_7                   rw addr(base, 0xa1e8) "foo" { };
register dcherr_7                       rw addr(base, 0xa1ec) "foo" { };
register dcherrmsk_7                    rw addr(base, 0xa1f0) "foo" { };
register dcr                        rw addr(base, 0xa280) "foo" { };
register apicicr0                       rw addr(base, 0xa9d0) "foo" { };
register apicicr1                       rw addr(base, 0xa9d8) "foo" { };
register apicicr2                       rw addr(base, 0xa9e0) "foo" { };
register apicicr3                       rw addr(base, 0xa9e8) "foo" { };
register apicicr4                       rw addr(base, 0xa9f0) "foo" { };
register apicicr5                       rw addr(base, 0xa9f8) "foo" { };
register apicicr6                       rw addr(base, 0xaa00) "foo" { };
register apicicr7                       rw addr(base, 0xaa08) "foo" { };
register scratch0                       rw addr(base, 0xab20) "foo" { };
register scratch1                       rw addr(base, 0xab24) "foo" { };
register scratch2                       rw addr(base, 0xab28) "foo" { };
register scratch3                       rw addr(base, 0xab2c) "foo" { };
register scratch4                       rw addr(base, 0xab30) "foo" { };
register scratch5                       rw addr(base, 0xab34) "foo" { };
register scratch6                       rw addr(base, 0xab38) "foo" { };
register scratch7                       rw addr(base, 0xab3c) "foo" { };
register scratch8                       rw addr(base, 0xab40) "foo" { };
register scratch9                       rw addr(base, 0xab44) "foo" { };
register scratch10                      rw addr(base, 0xab48) "foo" { };
register scratch11                      rw addr(base, 0xab4c) "foo" { };
register scratch12                      rw addr(base, 0xab50) "foo" { };
register scratch13                      rw addr(base, 0xab54) "foo" { };
register scratch14                      rw addr(base, 0xab58) "foo" { };
register scratch15                      rw addr(base, 0xab5c) "foo" { };
register rdmasr0                        rw addr(base, 0xb180) "foo" { };
register sbq_flush                      rw addr(base, 0xb1a0 ) "foo" { };
register tlb_flush                      rw addr(base, 0xb1a4) "foo" { };
register gtt_phy_base                   rw addr(base, 0xc118) "foo" { };
register emon_cnt0                      rw addr(base, 0xcc28) "foo" { };
register emon_cnt1                      rw addr(base, 0xcc2c) "foo" { };
register emon_cnt2                      rw addr(base, 0xcc30) "foo" { };
register emon_cnt3                      rw addr(base, 0xcc34) "foo" { };
};
